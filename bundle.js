var app=function(){"use strict";function e(){}function r(e){return e()}function t(){return Object.create(null)}function o(e){e.forEach(r)}function s(e){return"function"==typeof e}function n(e,r){return e!=e?r==r:e!==r||e&&"object"==typeof e||"function"==typeof e}function i(e){return null==e?"":e}function a(e,r){e.appendChild(r)}function c(e,r,t){e.insertBefore(r,t||null)}function p(e){e.parentNode.removeChild(e)}function l(e,r){for(let t=0;t<e.length;t+=1)e[t]&&e[t].d(r)}function u(e){return document.createElement(e)}function d(e){return document.createElementNS("http://www.w3.org/2000/svg",e)}function m(e){return document.createTextNode(e)}function g(){return m(" ")}function h(e,r,t,o){return e.addEventListener(r,t,o),()=>e.removeEventListener(r,t,o)}function f(e,r,t){null==t?e.removeAttribute(r):e.getAttribute(r)!==t&&e.setAttribute(r,t)}function T(e,r){r=""+r,e.wholeText!==r&&(e.data=r)}function E(e,r,t,o){e.style.setProperty(r,t,o?"important":"")}let w;function b(e){w=e}function v(e){(function(){if(!w)throw new Error("Function called outside component initialization");return w})().$$.on_mount.push(e)}const y=[],_=[],G=[],k=[],P=Promise.resolve();let A=!1;function O(e){G.push(e)}let S=!1;const C=new Set;function R(){if(!S){S=!0;do{for(let e=0;e<y.length;e+=1){const r=y[e];b(r),F(r.$$)}for(b(null),y.length=0;_.length;)_.pop()();for(let e=0;e<G.length;e+=1){const r=G[e];C.has(r)||(C.add(r),r())}G.length=0}while(y.length);for(;k.length;)k.pop()();A=!1,S=!1,C.clear()}}function F(e){if(null!==e.fragment){e.update(),o(e.before_update);const r=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,r),e.after_update.forEach(O)}}const U=new Set;let j;function D(){j={r:0,c:[],p:j}}function L(){j.r||o(j.c),j=j.p}function q(e,r){e&&e.i&&(U.delete(e),e.i(r))}function $(e,r,t,o){if(e&&e.o){if(U.has(e))return;U.add(e),j.c.push((()=>{U.delete(e),o&&(t&&e.d(1),o())})),e.o(r)}}function x(e){e&&e.c()}function I(e,t,n){const{fragment:i,on_mount:a,on_destroy:c,after_update:p}=e.$$;i&&i.m(t,n),O((()=>{const t=a.map(r).filter(s);c?c.push(...t):o(t),e.$$.on_mount=[]})),p.forEach(O)}function B(e,r){const t=e.$$;null!==t.fragment&&(o(t.on_destroy),t.fragment&&t.fragment.d(r),t.on_destroy=t.fragment=null,t.ctx=[])}function H(e,r){-1===e.$$.dirty[0]&&(y.push(e),A||(A=!0,P.then(R)),e.$$.dirty.fill(0)),e.$$.dirty[r/31|0]|=1<<r%31}function z(r,s,n,i,a,c,l=[-1]){const u=w;b(r);const d=s.props||{},m=r.$$={fragment:null,ctx:null,props:c,update:e,not_equal:a,bound:t(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(u?u.$$.context:[]),callbacks:t(),dirty:l,skip_bound:!1};let g=!1;if(m.ctx=n?n(r,d,((e,t,...o)=>{const s=o.length?o[0]:t;return m.ctx&&a(m.ctx[e],m.ctx[e]=s)&&(!m.skip_bound&&m.bound[e]&&m.bound[e](s),g&&H(r,e)),t})):[],m.update(),g=!0,o(m.before_update),m.fragment=!!i&&i(m.ctx),s.target){if(s.hydrate){const e=function(e){return Array.from(e.childNodes)}(s.target);m.fragment&&m.fragment.l(e),e.forEach(p)}else m.fragment&&m.fragment.c();s.intro&&q(r.$$.fragment),I(r,s.target,s.anchor),R()}b(u)}class N{$destroy(){B(this,1),this.$destroy=e}$on(e,r){const t=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return t.push(r),()=>{const e=t.indexOf(r);-1!==e&&t.splice(e,1)}}$set(e){var r;this.$$set&&(r=e,0!==Object.keys(r).length)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}function W(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}var M=function e(r,t,o,s){if("function"!=typeof o)throw new Error("method for before hook must be a function");s||(s={});if(Array.isArray(t))return t.reverse().reduce((function(t,o){return e.bind(null,r,o,t,s)}),o)();return Promise.resolve().then((function(){return r.registry[t]?r.registry[t].reduce((function(e,r){return r.hook.bind(null,e,s)}),o)():o(s)}))};var K=function(e,r,t,o){var s=o;e.registry[t]||(e.registry[t]=[]);"before"===r&&(o=function(e,r){return Promise.resolve().then(s.bind(null,r)).then(e.bind(null,r))});"after"===r&&(o=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then((function(e){return s(t=e,r)})).then((function(){return t}))});"error"===r&&(o=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch((function(e){return s(e,r)}))});e.registry[t].push({hook:o,orig:s})};var V=function(e,r,t){if(!e.registry[r])return;var o=e.registry[r].map((function(e){return e.orig})).indexOf(t);if(-1===o)return;e.registry[r].splice(o,1)};var J=Function.bind,X=J.bind(J);function Z(e,r,t){var o=X(V,null).apply(null,t?[r,t]:[r]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach((function(o){var s=t?[r,o,t]:[r,o];e[o]=e.api[o]=X(K,null).apply(null,s)}))}function Y(){var e={registry:{}},r=M.bind(null,e);return Z(r,e),r}var Q=!1;function ee(){return Q||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),Q=!0),Y()}ee.Singular=function(){var e={registry:{}},r=M.bind(null,e,"h");return Z(r,e,"h"),r}.bind(),ee.Collection=Y.bind();var re=ee,te=ee,oe=ee.Singular,se=ee.Collection;
/*!
     * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
     *
     * Copyright (c) 2014-2017, Jon Schlinkert.
     * Released under the MIT License.
     */
function ne(e){return"[object Object]"===Object.prototype.toString.call(e)}function ie(e){var r,t;return!1!==ne(e)&&(void 0===(r=e.constructor)||!1!==ne(t=r.prototype)&&!1!==t.hasOwnProperty("isPrototypeOf"))}function ae(e,r){const t=Object.assign({},e);return Object.keys(r).forEach((o=>{ie(r[o])?o in e?t[o]=ae(e[o],r[o]):Object.assign(t,{[o]:r[o]}):Object.assign(t,{[o]:r[o]})})),t}function ce(e){for(const r in e)void 0===e[r]&&delete e[r];return e}function pe(e,r,t){if("string"==typeof r){let[e,o]=r.split(" ");t=Object.assign(o?{method:e,url:o}:{url:e},t)}else t=Object.assign({},r);var o;t.headers=(o=t.headers)?Object.keys(o).reduce(((e,r)=>(e[r.toLowerCase()]=o[r],e)),{}):{},ce(t),ce(t.headers);const s=ae(e||{},t);return e&&e.mediaType.previews.length&&(s.mediaType.previews=e.mediaType.previews.filter((e=>!s.mediaType.previews.includes(e))).concat(s.mediaType.previews)),s.mediaType.previews=s.mediaType.previews.map((e=>e.replace(/-preview/,""))),s}re.Hook=te,re.Singular=oe,re.Collection=se;const le=/\{[^}]+\}/g;function ue(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function de(e,r){return Object.keys(e).filter((e=>!r.includes(e))).reduce(((r,t)=>(r[t]=e[t],r)),{})}function me(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function ge(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function he(e,r,t){return r="+"===e||"#"===e?me(r):ge(r),t?ge(t)+"="+r:r}function fe(e){return null!=e}function Te(e){return";"===e||"&"===e||"?"===e}function Ee(e,r){var t=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,o,s){if(o){let e="";const s=[];if(-1!==t.indexOf(o.charAt(0))&&(e=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach((function(t){var o=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);s.push(function(e,r,t,o){var s=e[t],n=[];if(fe(s)&&""!==s)if("string"==typeof s||"number"==typeof s||"boolean"==typeof s)s=s.toString(),o&&"*"!==o&&(s=s.substring(0,parseInt(o,10))),n.push(he(r,s,Te(r)?t:""));else if("*"===o)Array.isArray(s)?s.filter(fe).forEach((function(e){n.push(he(r,e,Te(r)?t:""))})):Object.keys(s).forEach((function(e){fe(s[e])&&n.push(he(r,s[e],e))}));else{const e=[];Array.isArray(s)?s.filter(fe).forEach((function(t){e.push(he(r,t))})):Object.keys(s).forEach((function(t){fe(s[t])&&(e.push(ge(t)),e.push(he(r,s[t].toString())))})),Te(r)?n.push(ge(t)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===r?fe(s)&&n.push(ge(t)):""!==s||"&"!==r&&"?"!==r?""===s&&n.push(""):n.push(ge(t)+"=");return n}(r,e,o[1],o[2]||o[3]))})),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==s.length?e:"")+s.join(n)}return s.join(",")}return me(s)}))}function we(e){let r,t=e.method.toUpperCase(),o=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),n=de(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const r=e.match(le);return r?r.map(ue).reduce(((e,r)=>e.concat(r)),[]):[]}(o);var a;o=(a=o,{expand:Ee.bind(null,a)}).expand(n),/^http/.test(o)||(o=e.baseUrl+o);const c=de(n,Object.keys(e).filter((e=>i.includes(e))).concat("baseUrl"));if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map((r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")),e.mediaType.previews.length)){const r=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=r.concat(e.mediaType.previews).map((r=>`application/vnd.github.${r}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`)).join(",")}return["GET","HEAD"].includes(t)?o=function(e,r){const t=/\?/.test(e)?"&":"?",o=Object.keys(r);return 0===o.length?e:e+t+o.map((e=>"q"===e?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(r[e])}`)).join("&")}(o,c):"data"in c?r=c.data:Object.keys(c).length?r=c:s["content-length"]=0,s["content-type"]||void 0===r||(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&void 0===r&&(r=""),Object.assign({method:t,url:o,headers:s},void 0!==r?{body:r}:null,e.request?{request:e.request}:null)}function be(e,r,t){return we(pe(e,r,t))}const ve=function e(r,t){const o=pe(r,t),s=be.bind(null,o);return Object.assign(s,{DEFAULTS:o,defaults:e.bind(null,o),merge:pe.bind(null,o),parse:we})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":`octokit-endpoint.js/6.0.10 ${W()}`},mediaType:{format:"",previews:[]}});var ye,_e=(function(e,r){var t=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t)return t;throw new Error("unable to locate global object")}();e.exports=r=t.fetch,t.fetch&&(r.default=t.fetch.bind(t)),r.Headers=t.Headers,r.Request=t.Request,r.Response=t.Response}(ye={exports:{}},ye.exports),ye.exports);class Ge extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var ke=function e(r,t){if(r&&t)return e(r)(t);if("function"!=typeof r)throw new TypeError("need wrapper function");return Object.keys(r).forEach((function(e){o[e]=r[e]})),o;function o(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var o=r.apply(this,e),s=e[e.length-1];return"function"==typeof o&&o!==s&&Object.keys(s).forEach((function(e){o[e]=s[e]})),o}};var Pe=ke(Oe),Ae=ke(Se);function Oe(e){var r=function(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function Se(e){var r=function(){if(r.called)throw new Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return r.onceError=t+" shouldn't be called more than once",r.called=!1,r}Oe.proto=Oe((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return Oe(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return Se(this)},configurable:!0})})),Pe.strict=Ae;const Ce=Pe((e=>console.warn(e)));class Re extends Error{constructor(e,r,t){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=r,Object.defineProperty(this,"code",{get:()=>(Ce(new Ge("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),r)}),this.headers=t.headers||{};const o=Object.assign({},t.request);t.request.headers.authorization&&(o.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o}}function Fe(e){(ie(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r,t,o={};return(e.request&&e.request.fetch||_e)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((s=>{t=s.url,r=s.status;for(const e of s.headers)o[e[0]]=e[1];if(204===r||205===r)return;if("HEAD"===e.method){if(r<400)return;throw new Re(s.statusText,r,{headers:o,request:e})}if(304===r)throw new Re("Not modified",r,{headers:o,request:e});if(r>=400)return s.text().then((t=>{const s=new Re(t,r,{headers:o,request:e});try{let e=JSON.parse(s.message);Object.assign(s,e);let r=e.errors;s.message=s.message+": "+r.map(JSON.stringify).join(", ")}catch(e){}throw s}));const n=s.headers.get("content-type");return/application\/json/.test(n)?s.json():!n||/^text\/|charset=utf-8$/.test(n)?s.text():function(e){return e.arrayBuffer()}(s)})).then((e=>({status:r,url:t,headers:o,data:e}))).catch((r=>{if(r instanceof Re)throw r;throw new Re(r.message,500,{headers:o,request:e})}))}const Ue=function e(r,t){const o=r.defaults(t);return Object.assign((function(r,t){const s=o.merge(r,t);if(!s.request||!s.request.hook)return Fe(o.parse(s));const n=(e,r)=>Fe(o.parse(o.merge(e,r)));return Object.assign(n,{endpoint:o,defaults:e.bind(null,o)}),s.request.hook(n,s)}),{endpoint:o,defaults:e.bind(null,o)})}(ve,{headers:{"user-agent":`octokit-request.js/5.4.12 ${W()}`}});class je extends Error{constructor(e,r){super(r.data.errors[0].message),Object.assign(this,r.data),Object.assign(this,{headers:r.headers}),this.name="GraphqlError",this.request=e,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const De=["method","baseUrl","url","headers","request","query","mediaType"],Le=/\/api\/v3\/?$/;function qe(e,r){const t=e.defaults(r);return Object.assign(((e,r)=>function(e,r,t){if("string"==typeof r&&t&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));const o="string"==typeof r?Object.assign({query:r},t):r,s=Object.keys(o).reduce(((e,r)=>De.includes(r)?(e[r]=o[r],e):(e.variables||(e.variables={}),e.variables[r]=o[r],e)),{}),n=o.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Le.test(n)&&(s.url=n.replace(Le,"/api/graphql")),e(s).then((e=>{if(e.data.errors){const r={};for(const t of Object.keys(e.headers))r[t]=e.headers[t];throw new je(s,{headers:r,data:e.data})}return e.data.data}))}(t,e,r)),{defaults:qe.bind(null,t),endpoint:Ue.endpoint})}qe(Ue,{headers:{"user-agent":`octokit-graphql.js/4.5.8 ${W()}`},method:"POST",url:"/graphql"});async function $e(e){const r=3===e.split(/\./).length?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:r}}async function xe(e,r,t,o){const s=r.endpoint.merge(t,o);return s.headers.authorization=function(e){return 3===e.split(/\./).length?`bearer ${e}`:`token ${e}`}(e),r(s)}const Ie=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign($e.bind(null,e),{hook:xe.bind(null,e)})},Be="3.2.4";class He{constructor(e={}){const r=new se,t={baseUrl:Ue.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};var o;if(t.headers["user-agent"]=[e.userAgent,`octokit-core.js/3.2.4 ${W()}`].filter(Boolean).join(" "),e.baseUrl&&(t.baseUrl=e.baseUrl),e.previews&&(t.mediaType.previews=e.previews),e.timeZone&&(t.headers["time-zone"]=e.timeZone),this.request=Ue.defaults(t),this.graphql=(o=this.request,qe(o,{method:"POST",url:"/graphql"})).defaults(t),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=r,e.authStrategy){const{authStrategy:t,...o}=e,s=t(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:o},e.auth));r.wrap("request",s.hook),this.auth=s}else if(e.auth){const t=Ie(e.auth);r.wrap("request",t.hook),this.auth=t}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach((r=>{Object.assign(this,r(this,e))}))}static defaults(e){return class extends(this){constructor(...r){const t=r[0]||{};super("function"!=typeof e?Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null):e(t))}}}static plugin(...e){var r;const t=this.plugins;return(r=class extends(this){}).plugins=t.concat(e.filter((e=>!t.includes(e)))),r}}He.VERSION=Be,He.plugins=[];function ze(e){e.hook.wrap("request",((r,t)=>{e.log.debug("request",t);const o=Date.now(),s=e.request.endpoint.parse(t),n=s.url.replace(t.baseUrl,"");return r(t).then((r=>(e.log.info(`${s.method} ${n} - ${r.status} in ${Date.now()-o}ms`),r))).catch((r=>{throw e.log.info(`${s.method} ${n} - ${r.status} in ${Date.now()-o}ms`),r}))}))}ze.VERSION="1.0.2";function Ne(e,r,t){const o="function"==typeof r?r.endpoint(t):e.request.endpoint(r,t),s="function"==typeof r?r:e.request,n=o.method,i=o.headers;let a=o.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};const e=function(e){if(!("total_count"in e.data)||"url"in e.data)return e;const r=e.data.incomplete_results,t=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const s=Object.keys(e.data)[0],n=e.data[s];return e.data=n,void 0!==r&&(e.data.incomplete_results=r),void 0!==t&&(e.data.repository_selection=t),e.data.total_count=o,e}(await s({method:n,url:a,headers:i}));return a=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e}}})}}function We(e,r,t,o){return"function"==typeof t&&(o=t,t=void 0),Me(e,[],Ne(e,r,t)[Symbol.asyncIterator](),o)}function Me(e,r,t,o){return t.next().then((s=>{if(s.done)return r;let n=!1;return r=r.concat(o?o(s.value,(function(){n=!0})):s.value.data),n?r:Me(e,r,t,o)}))}Object.assign(We,{iterator:Ne});function Ke(e){return{paginate:Object.assign(We.bind(null,e),{iterator:Ne.bind(null,e)})}}Ke.VERSION="2.6.2";const Ve={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits"]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://docs.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function Je(e,r,t,o,s){const n=e.request.defaults(o);return Object.assign((function(...o){let i=n.endpoint.merge(...o);if(s.mapToData)return i=Object.assign({},i,{data:i[s.mapToData],[s.mapToData]:void 0}),n(i);if(s.renamed){const[o,n]=s.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${o}.${n}()`)}if(s.deprecated&&e.log.warn(s.deprecated),s.renamedParameters){const i=n.endpoint.merge(...o);for(const[o,n]of Object.entries(s.renamedParameters))o in i&&(e.log.warn(`"${o}" parameter is deprecated for "octokit.${r}.${t}()". Use "${n}" instead`),n in i||(i[n]=i[o]),delete i[o]);return n(i)}return n(...o)}),n)}function Xe(e){return function(e,r){const t={};for(const[o,s]of Object.entries(r))for(const[r,n]of Object.entries(s)){const[s,i,a]=n,[c,p]=s.split(/ /),l=Object.assign({method:c,url:p},i);t[o]||(t[o]={});const u=t[o];u[r]=a?Je(e,o,r,l,a):e.request.defaults(l)}return t}(e,Ve)}Xe.VERSION="4.4.1";const Ze=He.plugin(ze,Xe,Ke).defaults({userAgent:"octokit-rest.js/18.0.12"});var Ye=function(e,r){return function(){for(var t=new Array(arguments.length),o=0;o<t.length;o++)t[o]=arguments[o];return e.apply(r,t)}},Qe=Object.prototype.toString;function er(e){return"[object Array]"===Qe.call(e)}function rr(e){return void 0===e}function tr(e){return null!==e&&"object"==typeof e}function or(e){if("[object Object]"!==Qe.call(e))return!1;var r=Object.getPrototypeOf(e);return null===r||r===Object.prototype}function sr(e){return"[object Function]"===Qe.call(e)}function nr(e,r){if(null!=e)if("object"!=typeof e&&(e=[e]),er(e))for(var t=0,o=e.length;t<o;t++)r.call(null,e[t],t,e);else for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&r.call(null,e[s],s,e)}var ir={isArray:er,isArrayBuffer:function(e){return"[object ArrayBuffer]"===Qe.call(e)},isBuffer:function(e){return null!==e&&!rr(e)&&null!==e.constructor&&!rr(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:tr,isPlainObject:or,isUndefined:rr,isDate:function(e){return"[object Date]"===Qe.call(e)},isFile:function(e){return"[object File]"===Qe.call(e)},isBlob:function(e){return"[object Blob]"===Qe.call(e)},isFunction:sr,isStream:function(e){return tr(e)&&sr(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:nr,merge:function e(){var r={};function t(t,o){or(r[o])&&or(t)?r[o]=e(r[o],t):or(t)?r[o]=e({},t):er(t)?r[o]=t.slice():r[o]=t}for(var o=0,s=arguments.length;o<s;o++)nr(arguments[o],t);return r},extend:function(e,r,t){return nr(r,(function(r,o){e[o]=t&&"function"==typeof r?Ye(r,t):r})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}};function ar(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var cr=function(e,r,t){if(!r)return e;var o;if(t)o=t(r);else if(ir.isURLSearchParams(r))o=r.toString();else{var s=[];ir.forEach(r,(function(e,r){null!=e&&(ir.isArray(e)?r+="[]":e=[e],ir.forEach(e,(function(e){ir.isDate(e)?e=e.toISOString():ir.isObject(e)&&(e=JSON.stringify(e)),s.push(ar(r)+"="+ar(e))})))})),o=s.join("&")}if(o){var n=e.indexOf("#");-1!==n&&(e=e.slice(0,n)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e};function pr(){this.handlers=[]}pr.prototype.use=function(e,r){return this.handlers.push({fulfilled:e,rejected:r}),this.handlers.length-1},pr.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},pr.prototype.forEach=function(e){ir.forEach(this.handlers,(function(r){null!==r&&e(r)}))};var lr=pr,ur=function(e,r,t){return ir.forEach(t,(function(t){e=t(e,r)})),e},dr=function(e){return!(!e||!e.__CANCEL__)},mr=function(e,r){ir.forEach(e,(function(t,o){o!==r&&o.toUpperCase()===r.toUpperCase()&&(e[r]=t,delete e[o])}))},gr=function(e,r,t,o,s){return function(e,r,t,o,s){return e.config=r,t&&(e.code=t),e.request=o,e.response=s,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}(new Error(e),r,t,o,s)},hr=ir.isStandardBrowserEnv()?{write:function(e,r,t,o,s,n){var i=[];i.push(e+"="+encodeURIComponent(r)),ir.isNumber(t)&&i.push("expires="+new Date(t).toGMTString()),ir.isString(o)&&i.push("path="+o),ir.isString(s)&&i.push("domain="+s),!0===n&&i.push("secure"),document.cookie=i.join("; ")},read:function(e){var r=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return r?decodeURIComponent(r[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},fr=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],Tr=ir.isStandardBrowserEnv()?function(){var e,r=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function o(e){var o=e;return r&&(t.setAttribute("href",o),o=t.href),t.setAttribute("href",o),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=o(window.location.href),function(r){var t=ir.isString(r)?o(r):r;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0},Er=function(e){return new Promise((function(r,t){var o=e.data,s=e.headers;ir.isFormData(o)&&delete s["Content-Type"];var n=new XMLHttpRequest;if(e.auth){var i=e.auth.username||"",a=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";s.Authorization="Basic "+btoa(i+":"+a)}var c,p,l=(c=e.baseURL,p=e.url,c&&!/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(p)?function(e,r){return r?e.replace(/\/+$/,"")+"/"+r.replace(/^\/+/,""):e}(c,p):p);if(n.open(e.method.toUpperCase(),cr(l,e.params,e.paramsSerializer),!0),n.timeout=e.timeout,n.onreadystatechange=function(){if(n&&4===n.readyState&&(0!==n.status||n.responseURL&&0===n.responseURL.indexOf("file:"))){var o,s,i,a,c,p="getAllResponseHeaders"in n?(o=n.getAllResponseHeaders(),c={},o?(ir.forEach(o.split("\n"),(function(e){if(a=e.indexOf(":"),s=ir.trim(e.substr(0,a)).toLowerCase(),i=ir.trim(e.substr(a+1)),s){if(c[s]&&fr.indexOf(s)>=0)return;c[s]="set-cookie"===s?(c[s]?c[s]:[]).concat([i]):c[s]?c[s]+", "+i:i}})),c):c):null,l={data:e.responseType&&"text"!==e.responseType?n.response:n.responseText,status:n.status,statusText:n.statusText,headers:p,config:e,request:n};!function(e,r,t){var o=t.config.validateStatus;t.status&&o&&!o(t.status)?r(gr("Request failed with status code "+t.status,t.config,null,t.request,t)):e(t)}(r,t,l),n=null}},n.onabort=function(){n&&(t(gr("Request aborted",e,"ECONNABORTED",n)),n=null)},n.onerror=function(){t(gr("Network Error",e,null,n)),n=null},n.ontimeout=function(){var r="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(r=e.timeoutErrorMessage),t(gr(r,e,"ECONNABORTED",n)),n=null},ir.isStandardBrowserEnv()){var u=(e.withCredentials||Tr(l))&&e.xsrfCookieName?hr.read(e.xsrfCookieName):void 0;u&&(s[e.xsrfHeaderName]=u)}if("setRequestHeader"in n&&ir.forEach(s,(function(e,r){void 0===o&&"content-type"===r.toLowerCase()?delete s[r]:n.setRequestHeader(r,e)})),ir.isUndefined(e.withCredentials)||(n.withCredentials=!!e.withCredentials),e.responseType)try{n.responseType=e.responseType}catch(r){if("json"!==e.responseType)throw r}"function"==typeof e.onDownloadProgress&&n.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&n.upload&&n.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){n&&(n.abort(),t(e),n=null)})),o||(o=null),n.send(o)}))},wr={"Content-Type":"application/x-www-form-urlencoded"};function br(e,r){!ir.isUndefined(e)&&ir.isUndefined(e["Content-Type"])&&(e["Content-Type"]=r)}var vr,yr={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(vr=Er),vr),transformRequest:[function(e,r){return mr(r,"Accept"),mr(r,"Content-Type"),ir.isFormData(e)||ir.isArrayBuffer(e)||ir.isBuffer(e)||ir.isStream(e)||ir.isFile(e)||ir.isBlob(e)?e:ir.isArrayBufferView(e)?e.buffer:ir.isURLSearchParams(e)?(br(r,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):ir.isObject(e)?(br(r,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300}};yr.headers={common:{Accept:"application/json, text/plain, */*"}},ir.forEach(["delete","get","head"],(function(e){yr.headers[e]={}})),ir.forEach(["post","put","patch"],(function(e){yr.headers[e]=ir.merge(wr)}));var _r=yr;function Gr(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var kr=function(e){return Gr(e),e.headers=e.headers||{},e.data=ur(e.data,e.headers,e.transformRequest),e.headers=ir.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),ir.forEach(["delete","get","head","post","put","patch","common"],(function(r){delete e.headers[r]})),(e.adapter||_r.adapter)(e).then((function(r){return Gr(e),r.data=ur(r.data,r.headers,e.transformResponse),r}),(function(r){return dr(r)||(Gr(e),r&&r.response&&(r.response.data=ur(r.response.data,r.response.headers,e.transformResponse))),Promise.reject(r)}))},Pr=function(e,r){r=r||{};var t={},o=["url","method","data"],s=["headers","auth","proxy","params"],n=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],i=["validateStatus"];function a(e,r){return ir.isPlainObject(e)&&ir.isPlainObject(r)?ir.merge(e,r):ir.isPlainObject(r)?ir.merge({},r):ir.isArray(r)?r.slice():r}function c(o){ir.isUndefined(r[o])?ir.isUndefined(e[o])||(t[o]=a(void 0,e[o])):t[o]=a(e[o],r[o])}ir.forEach(o,(function(e){ir.isUndefined(r[e])||(t[e]=a(void 0,r[e]))})),ir.forEach(s,c),ir.forEach(n,(function(o){ir.isUndefined(r[o])?ir.isUndefined(e[o])||(t[o]=a(void 0,e[o])):t[o]=a(void 0,r[o])})),ir.forEach(i,(function(o){o in r?t[o]=a(e[o],r[o]):o in e&&(t[o]=a(void 0,e[o]))}));var p=o.concat(s).concat(n).concat(i),l=Object.keys(e).concat(Object.keys(r)).filter((function(e){return-1===p.indexOf(e)}));return ir.forEach(l,c),t};function Ar(e){this.defaults=e,this.interceptors={request:new lr,response:new lr}}Ar.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=Pr(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var r=[kr,void 0],t=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){r.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){r.push(e.fulfilled,e.rejected)}));r.length;)t=t.then(r.shift(),r.shift());return t},Ar.prototype.getUri=function(e){return e=Pr(this.defaults,e),cr(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},ir.forEach(["delete","get","head","options"],(function(e){Ar.prototype[e]=function(r,t){return this.request(Pr(t||{},{method:e,url:r,data:(t||{}).data}))}})),ir.forEach(["post","put","patch"],(function(e){Ar.prototype[e]=function(r,t,o){return this.request(Pr(o||{},{method:e,url:r,data:t}))}}));var Or=Ar;function Sr(e){this.message=e}Sr.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},Sr.prototype.__CANCEL__=!0;var Cr=Sr;function Rr(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var r;this.promise=new Promise((function(e){r=e}));var t=this;e((function(e){t.reason||(t.reason=new Cr(e),r(t.reason))}))}Rr.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},Rr.source=function(){var e;return{token:new Rr((function(r){e=r})),cancel:e}};var Fr=Rr;function Ur(e){var r=new Or(e),t=Ye(Or.prototype.request,r);return ir.extend(t,Or.prototype,r),ir.extend(t,r),t}var jr=Ur(_r);jr.Axios=Or,jr.create=function(e){return Ur(Pr(jr.defaults,e))},jr.Cancel=Cr,jr.CancelToken=Fr,jr.isCancel=dr,jr.all=function(e){return Promise.all(e)},jr.spread=function(e){return function(r){return e.apply(null,r)}},jr.isAxiosError=function(e){return"object"==typeof e&&!0===e.isAxiosError};var Dr=jr,Lr=jr;Dr.default=Lr;var qr=Dr;function $r(r){let t,o,s;return{c(){t=u("div"),o=u("div"),o.innerHTML='<div class="lds-ripple svelte-1ceifz7"><div class="svelte-1ceifz7"></div> \n      <div class="svelte-1ceifz7"></div></div> \n    <div class="text-hint svelte-1ceifz7">Gallery is now loading...</div>',f(o,"class","content svelte-1ceifz7"),f(t,"id","splash"),f(t,"class",s=i(r[0]?["hidden"]:null)+" svelte-1ceifz7")},m(e,r){c(e,t,r),a(t,o)},p(e,[r]){1&r&&s!==(s=i(e[0]?["hidden"]:null)+" svelte-1ceifz7")&&f(t,"class",s)},i:e,o:e,d(e){e&&p(t)}}}function xr(e,r,t){let{hidden:o=!1}=r;return e.$$set=e=>{"hidden"in e&&t(0,o=e.hidden)},[o]}class Ir extends N{constructor(e){super(),z(this,e,xr,$r,n,{hidden:0})}}function Br(e,r,t){const o=e.slice();return o[9]=r[t],o}function Hr(e,r,t){const o=e.slice();return o[12]=r[t],o}function zr(e){let r,t,o,s,n,l,d,E,w,b=e[12][0]+"",v=e[12][1]+"";function y(){return e[7](e[12])}return{c(){r=u("li"),t=m(b),o=g(),s=u("strong"),n=m(v),l=g(),f(s,"class","svelte-1uu0c11"),f(r,"class",d=i(e[1]===e[12][0]?["selected"]:null)+" svelte-1uu0c11")},m(e,i){c(e,r,i),a(r,t),a(r,o),a(r,s),a(s,n),a(r,l),E||(w=h(r,"click",y),E=!0)},p(o,s){e=o,4&s&&b!==(b=e[12][0]+"")&&T(t,b),4&s&&v!==(v=e[12][1]+"")&&T(n,v),6&s&&d!==(d=i(e[1]===e[12][0]?["selected"]:null)+" svelte-1uu0c11")&&f(r,"class",d)},d(e){e&&p(r),E=!1,w()}}}function Nr(e){let r,t,o,s,n,l,d,E,w,b=e[9][0]+"",v=e[9][1]+"";function y(){return e[8](e[9])}return{c(){r=u("li"),t=m(b),o=g(),s=u("strong"),n=m(v),l=g(),f(s,"class","svelte-1uu0c11"),f(r,"class",d=i(e[1]===e[9][0]?["selected"]:null)+" svelte-1uu0c11")},m(e,i){c(e,r,i),a(r,t),a(r,o),a(r,s),a(s,n),a(r,l),E||(w=h(r,"click",y),E=!0)},p(o,s){e=o,8&s&&b!==(b=e[9][0]+"")&&T(t,b),8&s&&v!==(v=e[9][1]+"")&&T(n,v),10&s&&d!==(d=i(e[1]===e[9][0]?["selected"]:null)+" svelte-1uu0c11")&&f(r,"class",d)},d(e){e&&p(r),E=!1,w()}}}function Wr(r){let t,o,s,n,i,d,h,E,w,b,v,y,_,G,k,P,A,O,S,C=r[0].name+"",R=r[0].html_url.substr(8)+"",F=r[0].bio+"",U=r[2],j=[];for(let e=0;e<U.length;e+=1)j[e]=zr(Hr(r,U,e));let D=r[3],L=[];for(let e=0;e<D.length;e+=1)L[e]=Nr(Br(r,D,e));return{c(){t=u("div"),o=u("h1"),s=m(C),n=m(" Open Source"),i=g(),d=u("a"),h=m(R),w=g(),b=u("div"),v=u("p"),y=m(F),_=g(),G=u("br"),k=m("\n    Here are some projects I have contributed to the community."),P=g(),A=u("ul");for(let e=0;e<j.length;e+=1)j[e].c();O=g(),S=u("ul");for(let e=0;e<L.length;e+=1)L[e].c();f(o,"id","title"),f(o,"class","svelte-1uu0c11"),f(d,"id","github"),f(d,"href",E=r[0].html_url),f(d,"target","_blank"),f(d,"class","svelte-1uu0c11"),f(t,"class","pagehead svelte-1uu0c11"),f(v,"id","description"),f(v,"class","svelte-1uu0c11"),f(A,"class","svelte-1uu0c11"),f(S,"class","svelte-1uu0c11"),f(b,"class","profile svelte-1uu0c11")},m(e,r){c(e,t,r),a(t,o),a(o,s),a(o,n),a(t,i),a(t,d),a(d,h),c(e,w,r),c(e,b,r),a(b,v),a(v,y),a(v,_),a(v,G),a(v,k),a(b,P),a(b,A);for(let e=0;e<j.length;e+=1)j[e].m(A,null);a(b,O),a(b,S);for(let e=0;e<L.length;e+=1)L[e].m(S,null)},p(e,[r]){if(1&r&&C!==(C=e[0].name+"")&&T(s,C),1&r&&R!==(R=e[0].html_url.substr(8)+"")&&T(h,R),1&r&&E!==(E=e[0].html_url)&&f(d,"href",E),1&r&&F!==(F=e[0].bio+"")&&T(y,F),22&r){let t;for(U=e[2],t=0;t<U.length;t+=1){const o=Hr(e,U,t);j[t]?j[t].p(o,r):(j[t]=zr(o),j[t].c(),j[t].m(A,null))}for(;t<j.length;t+=1)j[t].d(1);j.length=U.length}if(26&r){let t;for(D=e[3],t=0;t<D.length;t+=1){const o=Br(e,D,t);L[t]?L[t].p(o,r):(L[t]=Nr(o),L[t].c(),L[t].m(S,null))}for(;t<L.length;t+=1)L[t].d(1);L.length=D.length}},i:e,o:e,d(e){e&&p(t),e&&p(w),e&&p(b),l(j,e),l(L,e)}}}function Mr(e,r,t){let{user:o}=r,{repos:s=[]}=r,{selectedCategory:n}=r,{onCategorySelect:i}=r,a=[],c=[];const p=e=>n===e?(history.replaceState({},document.title,"."),i(null),!1):(window.location.hash=`#${window.escape(e)}`,i(e),!1);v((()=>{const e=new Map,r=new Map;for(const t of s){if(t.topics)for(const r of t.topics){const t=e.get(r);e.set(r,t?t+1:1)}if(t.language){const e=r.get(t.language);r.set(t.language,e?e+1:1)}}for(const r of e.entries())a.push(r);a.sort(((e,r)=>e[1]!==r[1]?r[1]-e[1]:e[0].localeCompare(r[0])));for(const e of r.entries())c.push(e);c.sort(((e,r)=>e[1]!==r[1]?r[1]-e[1]:e[0].localeCompare(r[0]))),t(2,a),t(3,c)}));return e.$$set=e=>{"user"in e&&t(0,o=e.user),"repos"in e&&t(5,s=e.repos),"selectedCategory"in e&&t(1,n=e.selectedCategory),"onCategorySelect"in e&&t(6,i=e.onCategorySelect)},[o,n,a,c,p,s,i,e=>p(e[0]),e=>p(e[0])]}class Kr extends N{constructor(e){super(),z(this,e,Mr,Wr,n,{user:0,repos:5,selectedCategory:1,onCategorySelect:6})}}function Vr(e,r,t){const o=e.slice();return o[3]=r[t],o}function Jr(e){let r,t,o,s,n=e[0].language+"";return{c(){r=u("span"),t=u("i"),o=g(),s=m(n),f(t,"class","repo-language-color svelte-1rjamd8"),E(t,"background-color",e[1](e[0].language)),f(r,"class","language svelte-1rjamd8")},m(e,n){c(e,r,n),a(r,t),a(r,o),a(r,s)},p(e,r){1&r&&E(t,"background-color",e[1](e[0].language)),1&r&&n!==(n=e[0].language+"")&&T(s,n)},d(e){e&&p(r)}}}function Xr(e){let r,t=e[0].topics,o=[];for(let r=0;r<t.length;r+=1)o[r]=Zr(Vr(e,t,r));return{c(){r=u("ul");for(let e=0;e<o.length;e+=1)o[e].c();f(r,"class","svelte-1rjamd8")},m(e,t){c(e,r,t);for(let e=0;e<o.length;e+=1)o[e].m(r,null)},p(e,s){if(1&s){let n;for(t=e[0].topics,n=0;n<t.length;n+=1){const i=Vr(e,t,n);o[n]?o[n].p(i,s):(o[n]=Zr(i),o[n].c(),o[n].m(r,null))}for(;n<o.length;n+=1)o[n].d(1);o.length=t.length}},d(e){e&&p(r),l(o,e)}}}function Zr(e){let r,t,o=e[3]+"";return{c(){r=u("li"),t=m(o),f(r,"class","svelte-1rjamd8")},m(e,o){c(e,r,o),a(r,t)},p(e,r){1&r&&o!==(o=e[3]+"")&&T(t,o)},d(e){e&&p(r)}}}function Yr(r){let t,o,s,n,i,l,h,E,w,b,v,y,_,G,k,P,A,O,S,C,R,F,U,j,D=r[0].name+"",L=Qr(r[0].stargazers_count)+"",q=Qr(r[0].forks_count)+"",$=r[0].description+"",x=r[0].language&&Jr(r),I=r[0].topics&&r[0].topics.length>0&&Xr(r);return{c(){t=u("li"),o=u("a"),n=g(),i=u("h2"),l=m(D),h=g(),E=u("div"),w=u("span"),b=d("svg"),v=d("path"),y=g(),_=m(L),G=g(),k=u("span"),P=d("svg"),A=d("path"),O=g(),S=m(q),C=g(),x&&x.c(),R=g(),F=u("p"),U=m($),j=g(),I&&I.c(),f(o,"href",s=r[0].html_url),f(o,"target","_blank"),f(o,"class","svelte-1rjamd8"),f(i,"class","svelte-1rjamd8"),f(v,"fill-rule","evenodd"),f(v,"d","M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"),f(b,"aria-label","stars"),f(b,"class","octicon svelte-1rjamd8"),f(b,"height","16"),f(b,"role","img"),f(b,"version","1.1"),f(b,"viewBox","0 0 14 16"),f(b,"width","14"),f(w,"id","starts-info"),f(w,"class","svelte-1rjamd8"),f(A,"fill-rule","evenodd"),f(A,"d","M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"),f(P,"aria-label","forks"),f(P,"class","octicon svelte-1rjamd8"),f(P,"height","16"),f(P,"role","img"),f(P,"version","1.1"),f(P,"viewBox","0 0 10 16"),f(P,"width","10"),f(k,"id","forks-info"),f(k,"class","svelte-1rjamd8"),f(E,"class","repo-info svelte-1rjamd8"),f(F,"class","svelte-1rjamd8"),f(t,"class","repo-item svelte-1rjamd8")},m(e,r){c(e,t,r),a(t,o),a(t,n),a(t,i),a(i,l),a(t,h),a(t,E),a(E,w),a(w,b),a(b,v),a(w,y),a(w,_),a(E,G),a(E,k),a(k,P),a(P,A),a(k,O),a(k,S),a(E,C),x&&x.m(E,null),a(t,R),a(t,F),a(F,U),a(t,j),I&&I.m(t,null)},p(e,[r]){1&r&&s!==(s=e[0].html_url)&&f(o,"href",s),1&r&&D!==(D=e[0].name+"")&&T(l,D),1&r&&L!==(L=Qr(e[0].stargazers_count)+"")&&T(_,L),1&r&&q!==(q=Qr(e[0].forks_count)+"")&&T(S,q),e[0].language?x?x.p(e,r):(x=Jr(e),x.c(),x.m(E,null)):x&&(x.d(1),x=null),1&r&&$!==($=e[0].description+"")&&T(U,$),e[0].topics&&e[0].topics.length>0?I?I.p(e,r):(I=Xr(e),I.c(),I.m(t,null)):I&&(I.d(1),I=null)},i:e,o:e,d(e){e&&p(t),x&&x.d(),I&&I.d()}}}function Qr(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function et(e,r,t){let{repo:o}=r,{langColors:s={}}=r;return e.$$set=e=>{"repo"in e&&t(0,o=e.repo),"langColors"in e&&t(2,s=e.langColors)},[o,function(e){const r=s[e];return r&&r.color?r.color:"#DDD"},s]}class rt extends N{constructor(e){super(),z(this,e,et,Yr,n,{repo:0,langColors:2})}}function tt(e,r,t){const o=e.slice();return o[8]=r[t],o}function ot(e){let r,t;return r=new Kr({props:{user:e[0],repos:e[1],selectedCategory:e[3],onCategorySelect:e[5]}}),{c(){x(r.$$.fragment)},m(e,o){I(r,e,o),t=!0},p(e,t){const o={};1&t&&(o.user=e[0]),2&t&&(o.repos=e[1]),8&t&&(o.selectedCategory=e[3]),r.$set(o)},i(e){t||(q(r.$$.fragment,e),t=!0)},o(e){$(r.$$.fragment,e),t=!1},d(e){B(r,e)}}}function st(e){let r,t;return r=new rt({props:{repo:e[8],langColors:e[2]}}),{c(){x(r.$$.fragment)},m(e,o){I(r,e,o),t=!0},p(e,t){const o={};2&t&&(o.repo=e[8]),4&t&&(o.langColors=e[2]),r.$set(o)},i(e){t||(q(r.$$.fragment,e),t=!0)},o(e){$(r.$$.fragment,e),t=!1},d(e){B(r,e)}}}function nt(e){let r,t,o=!e[3]||e[8].topics.includes(e[3])||e[8].language===e[3],s=o&&st(e);return{c(){s&&s.c(),r=m("")},m(e,o){s&&s.m(e,o),c(e,r,o),t=!0},p(e,t){10&t&&(o=!e[3]||e[8].topics.includes(e[3])||e[8].language===e[3]),o?s?(s.p(e,t),10&t&&q(s,1)):(s=st(e),s.c(),q(s,1),s.m(r.parentNode,r)):s&&(D(),$(s,1,1,(()=>{s=null})),L())},i(e){t||(q(s),t=!0)},o(e){$(s),t=!1},d(e){s&&s.d(e),e&&p(r)}}}function it(e){let r,t,o,s,n,i;r=new Ir({props:{hidden:!e[4]}});let d=e[0]&&ot(e),m=e[1],h=[];for(let r=0;r<m.length;r+=1)h[r]=nt(tt(e,m,r));const T=e=>$(h[e],1,1,(()=>{h[e]=null}));return{c(){x(r.$$.fragment),t=g(),o=u("main"),d&&d.c(),s=g(),n=u("ul");for(let e=0;e<h.length;e+=1)h[e].c();f(n,"class","repo-list svelte-156fxof"),f(o,"class","svelte-156fxof")},m(e,p){I(r,e,p),c(e,t,p),c(e,o,p),d&&d.m(o,null),a(o,s),a(o,n);for(let e=0;e<h.length;e+=1)h[e].m(n,null);i=!0},p(e,[t]){const i={};if(16&t&&(i.hidden=!e[4]),r.$set(i),e[0]?d?(d.p(e,t),1&t&&q(d,1)):(d=ot(e),d.c(),q(d,1),d.m(o,s)):d&&(D(),$(d,1,1,(()=>{d=null})),L()),14&t){let r;for(m=e[1],r=0;r<m.length;r+=1){const o=tt(e,m,r);h[r]?(h[r].p(o,t),q(h[r],1)):(h[r]=nt(o),h[r].c(),q(h[r],1),h[r].m(n,null))}for(D(),r=m.length;r<h.length;r+=1)T(r);L()}},i(e){if(!i){q(r.$$.fragment,e),q(d);for(let e=0;e<m.length;e+=1)q(h[e]);i=!0}},o(e){$(r.$$.fragment,e),$(d),h=h.filter(Boolean);for(let e=0;e<h.length;e+=1)$(h[e]);i=!1},d(e){B(r,e),e&&p(t),e&&p(o),d&&d.d(),l(h,e)}}}const at="nekocode";function ct(e,r,t){var o=this&&this.__awaiter||function(e,r,t,o){return new(t||(t=Promise))((function(s,n){function i(e){try{c(o.next(e))}catch(e){n(e)}}function a(e){try{c(o.throw(e))}catch(e){n(e)}}function c(e){var r;e.done?s(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(i,a)}c((o=o.apply(e,r||[])).next())}))};const s=new Ze({previews:["mercy-preview"]});let n,i,a=[],c=window.unescape(window.location.hash.substr(1)),p=!0;return v((()=>o(void 0,void 0,void 0,(function*(){const e=yield qr.get("./lang_colors.json"),r=yield s.users.getByUsername({username:at}),o=yield s.repos.listForUser({username:at,type:"owner",per_page:100});t(2,i=e.data),t(0,n=r.data),t(1,a=o.data.filter((e=>!e.fork)).sort(((e,r)=>r.stargazers_count-e.stargazers_count))),t(4,p=!1)})))),[n,a,i,c,p,e=>{t(3,c=e)}]}return new class extends N{constructor(e){super(),z(this,e,ct,it,n,{})}}({target:document.body})}();
